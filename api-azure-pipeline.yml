# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
  paths:
    include:
    - 'Api'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: windows-2019

    variables:
      buildConfiguration: 'Release'
      projectFilepath: 'Api/ExpenseTracker.Api/ExpenseTracker.Api.csproj'

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Install EF tool'
      inputs:
        command: custom
        custom: 'tool'
        arguments: install --global dotnet-ef

    - task: DotNetCoreCLI@2
      displayName: 'Build with dotnet'
      inputs:
        command: 'build'
        projects: '$(projectFilepath)'
        configuration: '$(buildConfiguration)'
        arguments: '--output $(Build.ArtifactStagingDirectory)/api'

    - task: DotNetCoreCLI@2
      displayName: 'Create SQL migration script'
      inputs:
        command: 'custom'
        custom: 'ef'
        arguments: migrations script --output $(Build.ArtifactStagingDirectory)/sql/Migrations.sql --idempotent --project $(projectFilepath)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: windows-2019

    environment: 'Production'

    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            displayName: 'Download build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              downloadPath: '$(System.ArtifactsDirectory)'
              artifactName: 'drop'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy to Azure'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ExpenseTracker'
              appType: 'webApp'
              WebAppName: 'expense-tracker-api'
              VirtualApplication: '/api'
              packageForLinux: '$(System.ArtifactsDirectory)/drop/api'
              enableCustomDeployment: true
              DeploymentType: 'webDeploy'
              RemoveAdditionalFilesFlag: true

          - task: AzureKeyVault@2
            displayName: Retrieve connection string from Azure Key Vault
            inputs:
              azureSubscription: 'ExpenseTracker'
              KeyVaultName: 'expense-tracker'
              SecretsFilter: '*'
              RunAsPreJob: false

          - task: SqlAzureDacpacDeployment@1
            displayName: Run SQL migrations
            inputs:
              azureSubscription: 'ExpenseTracker'
              AuthenticationType: 'connectionString'
              ConnectionString: '$(ConnectionString)'
              deployType: 'SqlTask'
              SqlFile: '$(System.ArtifactsDirectory)/drop/sql/Migrations.sql'
              IpDetectionMethod: 'AutoDetect'
